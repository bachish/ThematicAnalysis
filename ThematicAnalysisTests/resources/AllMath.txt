<paper>
<paperName>
<name>
АЛГЕБРЫ ОСНОВНАЯ ТЕОРЕМА 
</name>
<detail>

</detail>

</paperName>
<paperDef>
теорема утверждающая любой многочлен комплексными коэффициентами имеет корень поле комплексных чисел 
</paperDef>
<content>
была высказана впервые Жираром Декартом формулировке отличной современной Маклорен Эйлер уточнили формулировку придав форму эквивалентную современной всякий многочлен действительными коэффициентами можно разложить произведение линейных квадратичных множителей действительными коэффициентами ламбер первым опубликовал доказательство появляются доказательства Эйлера Лапласа Лагранжа всех этих доказательствах предполагается заранее какие идеальные корни многочлена существуют затем доказывается крайней мере один является комплексным числом Гаусс первый доказал предположения корни существуют доказательство существу содержит построение поля разложения многочлена всех доказательствах используются иной форме топология свойства действительных комплексных чисел Роль топологии была сведена конечном итоге единственному предложению согласно рому многочлен действительными коэффициентами нечетной степени имеет действительный корень Курс высшей алгебры Алгебра Башмаков Историкоматематические исследования Ремесленников 
</content>
</paper>

<paper>
<paperName>
<name>
АЛГОЛ 
</name>
<detail>

</detail>

</paperName>
<paperDef>
общее название ряда алгоритмических языков предназначенных автоматизации программирования публикации алгоритмов сокращение слов 
</paperDef>
<content>
Первый вариант разработан группой ученых разных стран международной конференции Париже принят язык алгол объединил многие удачные свойства существовавших ранее языков программирования Этот язык получил самое широкое распространение обычно подразумевается термином особенно удобен описания алгоритмов численного анализа учитываются конкретные особенности вычислительных машин предусмотрены развитые канонизированные средства задания операций ввода вывода информации различных машин могут быть разработаны различные конкретные представления эталонного языка каждое является языком воспринимаемым транслятором данной машины правило переход эталонного языка конкретному представлению является естественным представляет большого труда Основными символами являются десятичные цифры строчные заглавные латинские буквы знаки препинания знаки арифме логич операций прочие специальные знаки английские слова частности начало конец вещественный целый массив основных символов языка определенным правилам образуются числа идентификаторы имена простые переменные элементы массивов указатели функций выражения описания примечания операторы Предусмотрено несколько основных типов операторов оператор присваивания оператор перехода условный оператор зависимости значения входящего него логич выражения выбирает выполнения один содержащихся внутренних операторов оператор цикла Группа операторов может быть объединена составной оператор блок содержащий описания запись алгоритма могут быть включены описания процедур Описание процедуры состоит заголовка тела Тело процедуры может представлять собой оператор чаще всего блок записанный обычным правилам придания языку большей гибкости допускается применение процедур описанных другом языке напр машинном языке Процедуру можно вызвать помощью оператора процедуры состоящего идентификатора процедуры списка фактич параметров соответствуют формальным параметрам преду смотренным заголовке процедуры данным идентификатором Выражение может содержать указатель функции означающий вызов процедуры предназначенной вычисления одной величины Допускается рекурсивный вызов процедур такой вызов процессе выполнения процедуры происходит вызов процедуры конкретных представлениях часто сокращаются языковые возможности имеющиеся эталонном целью унификации таких сокращений разработан алгоритмич язык подмножеством алгол представляющий собой упрощенный вариант эталонного рого исключены возможности вызывающие особые трудности разработке трансляторов небольших машин качестве преемника алгола предложен язык алгол существенно отличается структуре алгола содержит много новых понятий возможностей рассчитан более мощные машины Алгоритмический язык 
</content>
</paper>

<paper>
<paperName>
<name>
АЛГОЛ 
</name>
<detail>

</detail>

</paperName>
<paperDef>

</paperDef>
<content>
англ Универсальный язык программирования 
</content>
</paper>

<paper>
<paperName>
<name>
АЛГОЛ 
</name>
<detail>

</detail>

</paperName>
<paperDef>

</paperDef>
<content>
гаарден Сообщение алгоритмическом языке 
</content>
</paper>

<paper>
<paperName>
<name>
АЛГОЛ 
</name>
<detail>

</detail>

</paperName>
<paperDef>
Кибернетика 
</paperDef>
<content>
Мартынюк 
</content>
</paper>

<paper>
<paperName>
<name>
АЛГОЛ 
</name>
<detail>

</detail>

</paperName>
<paperDef>
универсальный алгоритмический язык разработанный коллективом ученых стран составе рабочей группы алголу Международной федерации обработке информации обмена алгоритмами эффективного выполнения различных вычислительных машинах средство изучения алгоритмов 
</paperDef>
<content>
Сохраняя стилистич связь алголом существенно отличается него богатством общностью конструкций Основными видами данных дополнение типам алгола вещественный целый логический могут быть литерный буквенноцифровой информации форматный описания формата внешней информации процедура Таким образом имена процедуры могут вычисляться выполнении программы хотя вычисление ограничивается динамич выбором значения имени процедуры явно заданной конечной совокупности основных видов можно индуктивно строить новые составные виды представляющие либо однородные индексируемые последовательности данных одного вида либо упорядоченные наборы данных произвольного вида структуры дополнение обычному аппарату описания процедур содержит средства описания инфиксных операций типа Наличие описания приоритета позволяет задавать отношения старшинства между вводимыми инфиксными операциями Характерное описание тождества является универсальной конструкцией описания переменных задания начальных значений организации подстановки фактич параметров процедуры задания синонимии позиции выражения может стоять оператор присваивания даже любая цепочка операторов вырабатывающая значение сочетании возможностью вычисления имен процедур также введением парных скобок условных выражений приводит допустимости конструкций поясняемых следующим примером Алгол если иначе Алгол если иначе если иначе Программа состоит замкнутых последовательных условных совместных предложений Первые обобщают такие понятия алгола блок составной оператор условные выражение оператор Совместные предложения обозначают неупорядоченные совокупности составляющих фраз являясь частности основным средством указания параллельных ветвей общем ходе выполнения программы Описание семантики характерно углубленной проработкой основных концепций алгоритмич языков позволяющей помощью небольшого числа независимых фундаментальных понятий точно описывать процесс выполнения программы Различаются внешние относящиеся конструкциям программы внутренние относящиеся данным числе процедурам именам объекты Аксиоматически вводятся отношения между внешними внутренними объектами напр содержит идентифицирует обладает именует является компонен Выполнение программы описывается терминах введенных отношений функция разбора программы Особенностью синтаксиса является задание виде двухступенчатой грамматики когда порождающие правила являются сами допустимыми текстами метаязыке заданном своей порождающей грамматикой Грамматич правила имеют напр список 
</content>
</paper>

<paper>
<paperName>
<name>
ПОНЯТИЙ 
</name>
<detail>
разделенных 
</detail>

</paperName>
<paperDef>
грамма 
</paperDef>
<content>
единицы метаязыка порождающие правила имеют напр 
</content>
</paper>

<paper>
<paperName>
<name>
ПОНЯТИЕ 
</name>
<detail>
идентификатор оператор 
</detail>

</paperName>
<paperDef>
понятия метаязыка напр 
</paperDef>
<content>
могут иметь бесконечное число порождений Собственно порождающие правила получаются систематич заменой понятий метаязыка грамматич правилах любое одно порождение Результирующие правила металингвистич обозначениях алгола выглядят напр список идентификаторов разделенных запятыми идентификатор список идентификаторов разделенных запятыми запятая идентификатор оператор присваивания целого выражение вырабатывающее целого выражение вырабатывающее целое Использование двухступенчатой грамматики позволяет первых сократить число однотипных порождающих правил вторых выразить средствами синтаксиса атрибутную информацию понятий контекстные зависимости противном случае формулируются виде содержательных ограничений Вейнгаарден Сообщение алгоритмическом языке 
</content>
</paper>

<paper>
<paperName>
<name>
АЛГОЛ 
</name>
<detail>

</detail>

</paperName>
<paperDef>
Кибернетика 
</paperDef>
<content>
Линдси Неформальное введение 
</content>
</paper>

<paper>
<paperName>
<name>
АЛГОЛ 
</name>
<detail>

</detail>

</paperName>
<paperDef>

</paperDef>
<content>
англ Ершов 
</content>
</paper>

<paper>
<paperName>
<name>
АЛГОРИТМ 
</name>
<detail>
алгорифм 
</detail>

</paperName>
<paperDef>
точное предписание задает вычислительный процесс называемый этом случае алгоритмическим начинающийся произвольного исходного данного совокупности возможных данного 
</paperDef>
<content>
исходных данных направленный получение полностью определяемого этим исходным данным результата являются напр известные начальной школы правила сложения вычитания умножения деления столбиком этих возможными результатами служат натуральные числа записанные десятичной системе возможными исходными данными упорядоченные пары таких чисел Вообще говоря предполагается результат будет обязательно получен процесс применения конкретному возможному исходному данному алгоритмич процесс развертывающийся начиная этого данного может также оборваться безрезультатно этом случае говорят произошла безрезультатная остановка закончиться вовсе случае если процесс заканчивается соответственно заканчивается получением результата говорят применим соответственно неприменйм рассматриваемому возможному исходному данному Можно построить такой рого существует распознающего произвольному возможному исходному данному применим нему такой можно частности построить чтобы совокупностью возможных исходных данных служил натуральный Понятие занимает одно центральных мест современной математике прежде всего вычислительной проблема численного решения уравнений данного типа заключается отыскании всякую пару составленную произвольного уравнения этого типа произвольного положительного рационального числа перерабатывает число набор чисел отличающееся отличающихся корня корней этого уравнения меньше Усовершенствование цифровых вычислительных машин дает возможность реализовать более сложные Однако встретившийся описывающей понятие формулировке термин вычислительный процесс следует понимать узком смысле только цифровых вычислений школьном курсе алгебры говорят буквенных вычислениях арифметич вычислениях появляются отличные цифр символы скобки знак равенства знаки арифметич действий Целесообразно таким образом рассматривать оперирующие произвольными символами комбинациями Простейшим случаем такой комбинации является линейная последовательность символов образующая слово однако можно рассматривать нелинейные комбинации такие алгебраич матрицы знакосочетания смысле Бурбаки фразы того иного языка расставленными стрелками синтаксич управления вообще размеченные иным способом графы Наиболее общее интуитивное понимание состоит исходными данными результатами могут служить самые разнообразные конструктивные объекты открывает возможность широкого применения понятия Можно говорить перевода одного языка другой работы поездного диспетчера перерабатывающего информацию движении поездов приказы примерах алгоритмич описания процессов управления именно поэтому понятие является одним центральных понятий кибернетики Пример алгоритма Пусть возможными исходными данными возможными результатами служат всевозможные слова алфавите Условимся называть переход слова слову допустимым следующих двух случаях ниже обозначает произвольное слово имеет имеет имеет имеет Формулируется предписание взяв слово качестве исходного делай допустимые переходы пока получится слово вида тогда остановись слово есть результат предписание образует обозначим Возьмем качестве исходного данного слово После одного перехода получим Ъааа после второго силу предписания должны остановиться результат есть Возьмем качестве исходного данного слово Получим последовательно Можно доказать процесс никогда кончится никогда возникает слово начинающееся каждого получающихся слов можно будет совершить допустимый переход Возьмем теперь качестве исходного данного слово Получим Далее можем совершить допустимый переход время сигнала остановки Произошла безрезультатная остановка Итак применим слову неприменим словам Значение алгоритмов встречаются науке каждом шагу умение решать задачу общем виде всегда означает существу владение Говоря напр умении человека складывать числа имеют виду любых чисел рано поздно сумеет найти сумму владеет единообразным приемом сложения применимым любым двум конкретным записям чисел иными словами сложения примером такого является известное правило сложения чисел столбиком Понятие задачи общем виде уточняется помощи понятия массовая алгоритмическая проблема задается серией отдельных единичных проблем состоит требовании найти единый решения когда такого существует говорят рассматриваемая неразрешима проблема численного решения уравнений данного типа проблема автоматического перевода суть образующими единичными проблемами являются случае проблемы численного решения отдельных уравнений данного типа случае проблемы перевода отдельных фраз Ролью определяется значение сфера приложения понятия напр алгебре возникают проверки алгебраич равенств различных типов математич логике распознавания выводимости предложений заданных аксиом математич логики понятие существенно потому него опирается центральное математич логики понятие исчисления служащее обобщением уточнением интуитивных понятий вывода доказательства Установление неразрешимости напр проблемы распознавания истинности доказуемости логико математич языка является важным познавательным актом показывающим решения конкретных единичных проблем данной серии принципиально необходимы специфические каждой отдельной проблемы методы Содержательные явления легли основу образования понятия издавна занимали важное место науке древнейших времен многие задачи математики заключались поисках иных конструктивных методов поиски особенно усилившиеся связи созданием удобной символики также осмысления принципиального отсутствия искомых методов ряде случаев задача квадратуре круга подобные было мощным фактором развития научных знаний Осознание невозможности решить задачу прямым вычислением привело созданию теоретико множественной концепции Лишь после периода бурного развития этой концепции рамках вопрос конструктивных методах современном понимании вообще возникает оказалось возможным вновь вернуться вопросам конструктивности новом уровне обогащенном выкристаллизовавшимся понятием понятие легло основу конструктивного направления математике Само слово происходит являющегося свою очередь латинской транслитерацией арабского имени хорезмийского математика Хорезми средневековой Европе назывались десятичная позиционная система счисления искусство счета поскольку именно благодаря латинскому переводу трактата Хорезми Европа познакомилась позиционной системой Строение алгоритмического процесса Алгоритмич процесс есть процесс последовательного преобразования конструктивных объектов происходящий дискретными шагами каждый состоит смене одного другим применении слову возникают последовательно применении скажем вычитания столбиком паре последовательно возникнут такие этом ряду сменяющих друг друга каждый последующий полностью определяется рамках данного непосредственно предшествующим более строгом подходе предполагается также переход каждого непосредственно следующему достаточно элементарен смысле происходящее один преобразование предыдущего следующий носит локальный характер преобразованию подвергается весь лишь заранее ограниченная данного часть само преобразование определяется всем предыдущим лишь этой ограниченной частью Таким образом наряду совокупностями возможных исходных данных возможных результатов каждого имеется совокупность возможных промежуточных результатов представляющая собой рабочую среду развивается алгоритмич процесс совокупности совпадают вычитания столбиком возможными исходными данными служат пары чисел возможными результатами числа десятичной системе возможные промежуточные результаты суть трехэтаж записи вида запись числа десятичной системе такая запись пустое слово запись числа десятичной системе допущением точек рыми цифрами правило данного можно выделить характеризующих независимых параметров совокупность возможных исходных данных совокупность возможных результатов совокупность возможных промежуточных результатов правило начала правило непосредственной переработки правило окончания правило извлечения результата Уточнения понятия алгоритма Понятие общем виде принадлежит числу основных первоначальных понятий математики допускающих определения терминах более простых понятий Возможные уточнения понятия приводят строго говоря известному сужению этого понятия Каждое такое уточнение состоит каждого указанных параметров точно описывается класс пределах рого этот параметр может меняться Выбор таких классов отличает одно уточнение другого Поскольку параметров однозначно определяют выбор классов изменения этих параметров определяет класс Однако такой выбор может претендовать название уточнения лишь если имеется убеждение произвольного имеющего допускаемые данным выбором совокупности возможных исходных данных возможных результатов может быть указан равносильный определенного данным выбором класса убеждение формулируется каждого уточнения виде основной гипотезы современном уровне наших пред ставлении может быть предметом математич доказательства Первые уточнения описанного типа предложили Пост Тьюринг конструкции многом предвосхитили идеи заложенные основу современных цифровых вычислительных машин Известны также уточнения сформулированные Марковым Нормальный алгорифм Колмогоровым последний предложил трактовать конструктивные объекты топологич комплексы определенного вида дало возможность уточнить свойство локальности преобразования каждого предложенных уточнений соответствующая основная гипотеза хорошо согласуется практикой пользу этой гипотезы говорит можно доказать предложенные уточнения естественном смысле эквивалентны друг другу качестве примера рассмотрим уточнение предложенное Тьюрингом своем оригинальном виде уточнение заключалось описании абстрактной вычислительной машины состоящей бесконечной ленты разбитой следующие друг другом линейном порядке ячейки причем каждой ячейке записан символ внешнего алфавита машины каретки находящейся каждый момент состоянии заданного конечного списка состояний способной перемещаться вдоль ленты изменять содержимое ячеек вычислений такой машине Тьюрингов задается виде программы управляющей действиями каретки Более подробное точное описание статье Тьюринга машина здесь приводится модернизированное изложение конструкции Тьюринга терминах указанных выше параметров Чтобы задать тьюрингов надо указать попарно непересекающиеся алфавиты выделенной буквой выделенными буквами набор вида есть один трех знаков причем предполагается этом наборе программой одинаковыми первыми членами Параметры задаются возможными исходными данными возможными результатами служат слова возможными промежуточными результатами слова алфавите содержащие более одной буквы Правило начала исходное слово переводится слово Правило окончания заключительным является промежуточный результат содержащий Правило извлечения результата результатом объявляется цепочка всех букв заключительного промежуточного результата идет вслед предшествует первой букве принадлежащей Правило непосредственной переработки переводящее состоит следующем Приписываем слева справа букву затем образовавшемся слове часть вида заменяем слово следующему правилу программе ищется пара первым членом пусть второй член этой пары есть если есть если есть если есть Возникающее после этой замены слово есть Алгоритмов теория Успенский 
</content>
</paper>

<paper>
<paperName>
<name>
АЛГОРИТМ В АЛФАВИТЕ А 
</name>
<detail>

</detail>

</paperName>
<paperDef>
точное общепонятное предписание определяющее потенциально осуществимый процесс последовательного преобразования абстрактных слов алфавите процесс допускающий любое слово качестве исходного 
</paperDef>
<content>
представляют собой частный случай общего понятия алгоритма Исходными данными возможными результатами применения являются конструктивные объекты достаточно общего типа слова обстоятельство определяет роль понятия математике были выработаны различные уточнения стандартизации понятия наибольшую известность среди получили нормальные алгорифмы Маркова алгоритмы определяемые основе понятия Тьюринга машины построении конкретных иногда соображениям технического характера связанным деталями определения алгоритма кодировки исходных данных приходится расширять исходные алфавиты путем введения дополнительных букв рассматривать алгоритмы расширенных алфавитах таких ситуациях удобным инструментом является понятие алгоритма данным алфавитом алгоритма расширении этого алфавита двух алгоритмов данным алфавитом могут быть естественным образом введены понятия эквивалентности полной эквивалент ности относительно него этих алгоритмов Марков Теория алгорифмов матем Нагорный 
</content>
</paper>

<paper>
<paperName>
<name>
АЛГОРИТМ ЛОКАЛЬНЫЙ 
</name>
<detail>

</detail>

</paperName>
<paperDef>
алгоритм устанавливающий свойства элементов множества использующий каждом шаге этом только информацию окрестности элемента 
</paperDef>
<content>
терминах естественно формулируются решаются задачи существовании несуществовании эффективных алгоритмов различных дискретных экстремальных задач Пусть задано семейство множеств пусть каждой паре сопоставлено множество такое если Тогда множество окрестностью Примерами окрестностей служат окрестности конъюнкции сокращенной нормальной форме Булевых функций минимизация Пусть конечный неориентированный граф множество вершин множество Окрестность ребра графа состоит всех вершин ребер инцидентных ребру также всех ребер вершины входят окрестность Пусть определена окрестность тогда окрестность состоит всех вершин ребер инцидентных вершинам окрестности всех ребер вершины принадлежат окрестности Аналогично вводятся окрестности произвольной вершины графа Пусть парах определена система двуместных предикатов разбита непересекающихся подмножества Элементы первого подмножества основными предикатами второго вспомогательными предикатами Вектор информационным если Вектор допустимым если всех выполнено равенство Множество всех информационных векторов допустимых информационным множеством Пусть Множество допустимым Класс всех допустимых множеств информационным классом множества системе предикатов Очевидно окрестность определяет окрестность Введем систему функций таких Функции определены всех парах таких удовлетво ряют следующим условиям если множество которое получается заменой элемента допустимо краткостипары обозначаются через описанных множеств вводится частичный порядок множестве множестве информационных векторов длины если множестве элементов отметками если множестве если первых принадлежат одному информационному классу вторых того следует множестве окрестностей вида тогда только тогда когда условий следует Пусть элементы одного множеств Если элементы равными обозначается Функция монотонной если соотношения следует определения необходимо также ввести горитм упорядочивания Пусть произвольное множество составленное элементов информационными векторами Рассмотрим множество всех таких Алгоритм упорядочивает множество полностью определяется системой предикатов разби ением этой системы основные вспомогательные предикаты системой монотонных функций алгоритмом Пусть Первый состоит следующем множеству применяется алгоритм первой порядку пары вычисляется элемент заменяется если берется вторая пара если всех элементов выполнено равенство заканчивается после просмотра всех противном случае после замены вектора новый вектор если больше элементов первых местах информационных векторах имеется хотя один символ алгоритм заканчивается если есть заканчивается первый Пусть выполнено шагов Описание шага точности повторяет описание первого если вместо множества рассматривать множество перешло после первых шагов силу монотонности функций закончится после конечного числа шагов Исходными теоремами являются теорема единственности теорема суще ствования наилучшего алгоритма Первая теорема утверждает результат вычислений основных предикатов зависит алгоритма порядка обхода элементов множества Вторая теорема утверждает существование весьма общих предположениях наилучше заданной фиксированной системе окрестностей вычисляет заданные основные предикаты фиксированных вспомогательных предикатах всегда когда делает любой другой системой окрестностей основных вспомогательных предикатов Задача получения наилучшего явной форме решена алгоритмов синтеза минимальных покрытий Пусть задан набор множество сложность Сложность набора есть Требуется построить покрытие жествами числа минимальной сложностью Система окрестностей каждого вводится аналогично системе окрестностей конъюнкций Наилучший строится системы окрестностей фиксированных предикатах множество вспомогательных предикатов пусто качестве основных рассматриваются предикаты входит одно минимальное покрытие входит минимальные покрытия Наилучшие построены также вычисления простых свойств ребер графа Большое число различных было предложено решения задач минимизации булевых функций дискретного линейного программирования Важное место теории занимают задачи вычислимости экстремальных свойств классе Если парах задана система вложенных окрестностей работает системе окрестностей говорят имеет индекс Число предикатов определении естественно считать величиной памяти Пусть задано множество предикатов Считается предикаты участвующие определении принадлежат Пусть результат применения преди говорят является числимым если всякого индекса величиной памяти основным предикатом вспомогательными найдется множество такое предикат будет вычислен всех элементов Пусть совокупность всех булевых функций переменных предикат конъюнкция входит хотя одну минимальную дизъюнктивную нормальную форму естественных ограничениях класс предикатов установлено предикат является вычислимым если Интересно отметить предикат конъюнкция входит хотя одну тупиковую дизъюнктивную нормальную форму Булевых функций нормальные формы является вычислимым вычислимым Аналогичные результаты получены предикатов описывающих вхождение ребра минимальный путь между заданными вершинами графа Журавлев Кибернетика Хуторянская Кибернетика Журавлев Проблемы кибернетики также статье Булевых функций минимизация Журавлев 
</content>
</paper>
