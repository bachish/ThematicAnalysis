// -----------------------------------------------------------------------------
// File LEM_CONS.H
//
// (c) Koziev Elijah, Obninsk-Cherepovets, Russia, 1995-2002
//
// Content:
// Набор констант с повышенной точностью.
//
// Один из основных источников:
//
// "Справочник по специальным функциям", под редакцией М.Абрамовица
//  и И.Стиган, -М.:"Наука", 1979, глава 1, стр. 13-14.
// -----------------------------------------------------------------------------
//
// CD->01.12.1994
// LC->07.09.2017
// --------------

#if !defined( LEM_CONSTANTS__H )
#define LEM_CONSTANTS__H
#pragma once

 // ----------------------------------------------
 // Константы PI и производные.

 /*****************************************************************************
   ...Обозначение pi введено Эйлером в первой половине 18го века...

   ...В первой половине 15го века в обсерватории узбекского хана Улугбека
   под Самаркандом его придворный астроном Аль-Каши вычислил pi с 17 знаками
   после запятой...

   ...К концу 19го века английский математик Вильямс Шенкс вычислил 707 знаков
   pi, потратив 20 лет. В 520м знаке позднее, в 1945 году, нашли ошибку.

 В качестве комментария привожу число pi с 2500 знаками:

 3.14159265358979323846264338327950288419716939937510582097494459230781640628620
 89986280348253421170679821480865132823066470938446095505822317253594081284811174
 50284102701938521105559644622948954930381964428810975665933446128475648233786783
 16527120190914564856692346034861045432664821339360726024914127372458700660631558
 81748815209209628292540917153643678925903600113305305488204665213841469519415116
 09433057270365759591953092186117381932611793105118548074462379962749567351885752
 72489122793818301194912983367336244065664308602139494639522473719070217986094370
 27705392171762931767523846748184676694051320005681271452635608277857713427577896
 09173637178721468440901224953430146549585371050792279689258923542019956112129021
 96086403441815981362977477130996051870721134999999837297804995105973173281609631
 85950244594553469083026425223082533446850352619311881710100031378387528865875332
 08381420617177669147303598253490428755468731159562863882353787593751957781857780
 53217122680661300192787661119590921642019893809525720106548586327886593615338182
 79682303019520353018529689957736225994138912497217752834791315155748572424541506
 95950829533116861727855889075098381754637464939319255060400927701671139009848824
 01285836160356370766010471018194295559619894676783744944825537977472684710404753
 46462080466842590694912933136770289891521047521620569660240580381501935112533824
 30035587640247496473263914199272604269922796782354781636009341721641219924586315
 03028618297455570674983850549458858692699569092721079750930295532116534498720275
 59602364806654991198818347977535663698074265425278625518184175746728909777727938
 00081647060016145249192173217214772350141441973568548161361157352552133475741849
 46843852332390739414333454776241686251898356948556209921922218427255025425688767
 17904946016534668049886272327917860857843838279679766814541009538837863609506800
 64225125205117392984896084128488626945604241965285022210661186306744278622039194
 94504712371378696095636437191728746776465757396241389086583264599581339047802759
 00994657640789512694683983525957098258226205224894077267194782684826014769909026
 40136394437455305068203496252451749399651431429809190659250937221696461515709858
 38741059788595977297549893016175392846813826868386894277415599185592524595395943
 10499725246808459872736446958486538367362226260991246080512438843904512441365497
 62780797715691435997700129616089441694868555848406353422072225828488648158456028
 50601684273945226746767889525213852254995466672782398645659611635488623057745649
 80355936345681743241125

 ******************************************************************************/
 #define PI        3.141592653589793238462643383279502884197169399375105820975
 #define PI_D_2    1.570796326794896619231322
 #define SQRT_PI   1.772453850905516027298167

 // pow(PI,2)
 #define PIPOW2   9.869604401089358618834491

 // pow(PI,3)
 #define PIPOW3   3.100627668029982017547632e1

 // pow(PI,4)
 #define PIPOW4   9.740909103400243723644033e1

 // pow(PI,5)
 #define PIPOW5   3.060196847852814532627413e2

 // pow(PI,6)
 #define PIPOW6   9.613891935753044370302194e2

 // pow(PI,7)
 #define PIPOW7   3.020293227776792067514206e3

 // pow(PI,8)
 #define PIPOW8   9.488531016070574007128576e3

 // pow(PI,9)
 #define PIPOW9   2.980909933344621166650940e4

 // pow(PI,10)
 #define PIPOW10   9.364804747608302097371669e4

 // 2*PI
 #define PI2   6.283185307179586476925287

 // 3*PI
 #define PI3   9.424777960769379715387930

 // 4*PI
 #define PI4   1.256637061435917295385057e1

 // 5*PI
 #define PI5   1.570796326794896619231322e1

 // 6*PI
 #define PI6   1.884955592153875943077586e1

 // 7*PI
 #define PI7   2.199114857512855266923850e1

 // 8*PI
 #define PI8   2.513274122871834590770115e1

 // 9*PI
 #define PI9   2.827433388230813914616379e1

 // 3*PI/2
 #define PI_3_2   4.712388980384689857693965

 // 4*PI/3
 #define PI_4_3   4.188790204786390984616858
// ----------------------------------------------

 // ----------------------------------------------
 // Постоянная Эйлера-Маскерони (Euler's constant).
 //
 // ЛИТЕРАТУРА:
 //            1. Г.Корн, Т.Корн "Справочник по математике для научных
 //               работников и инженеров", -М.:"Наука", 1968, глава 21,
 //               стр. 634.
 //
 //            2. Андре Анго "Математика для радио- и электроинженеров",
 //               -М.:"Наука", 1965, стр. 366.
 //
 //            Константа взята из библиотеки NAG, файл [x01abf.for]
 //
 #define GAMMA_CONST   0.577215664901532860606512090082
 // ----------------------------------------------


 #define SQRT2    1.414213562373095048801688724209698078569671875376948073177
 #define SQRT3    1.732050807568877293527446341505872366942805253810380628056
 #define GOLDEN   1.618033988749894848204586834365638117720309179805762862135

 #define LN2      0.693147180559945309417232121458176568075500134360255254121
 #define LNE      2.718281828459045235360287471352662497757247093699959574967

 // log10(2.)
 #define LOG102    3.010299956639811952137389e-1

 // pow( exp(1), -1 )
 #define EXP1     3.678794411714423215955238e-1

 // ln(10)
 #define LN10     2.3025850929940456840179915

 // ln(PI)
 #define LNPI     1.144729885849400174143427

 // ln(sqrt(2.*PI))
 #define LNSQRT2PI   9.189385332046727417803296e-1

 // log10(PI)
 #define LOG10PI   4.971498726941338543512683e-1

 // log10(exp(1))
 #define LOG10E   4.342944819032518276511289e-1

 // log2(exp(1))
 #define LOG2E    1.0/LN2


 #define RAD2GRAD   57.295779513082320876798155
 #define GRAD2RAD   0.017453292519943295769237

#endif
