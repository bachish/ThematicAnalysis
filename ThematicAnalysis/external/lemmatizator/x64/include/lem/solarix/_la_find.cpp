// Generated by YGRES compiler ver. 8.34.7530 Standard Win32  (build date Aug 27 2010) [29.08.2010 11:26:04]
// This file contains the results of LA_WordProjBuffer::Compile()
// compilation.
// Do not edit it!

#if defined SOL_CAA

#include <lem/solarix/la_autom.h>

using namespace std;
using namespace lem;

using namespace Solarix;


bool LA_WordProjBuffer::Find_In_Compiled_Cache(
                                               const RC_Lexem &to_be_found,
                                               MCollect<Word_Coord> &coord_list,
                                               MCollect<Real1> &val_list
                                              )
{
 // Cache contains 4933 projection sublist(s), total 0 projections
 const wchar_t first_ch = to_be_found->front();
 const int l = to_be_found->length();

 if( l==1 )
  {
   // Here comes the fast algorithm for 1-char length lexems
   switch( first_ch )
   {
   } // end switch()

   return false;
  } // end if


 if( l>0 )
  return false;

 lem::uint8_t h = to_be_found->GetHash();
 switch(first_ch)
 {
 }


 return false;
}

#endif
