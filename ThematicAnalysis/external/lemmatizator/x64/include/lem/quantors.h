// -----------------------------------------------------------------------------
// File QUANTORS.H
//
// (c) Koziev Elijah
//
// Content:
// QUANTORS.
// Специальные объявления для поддержки особых метачисловых понятий.
//
// 27.06.2007 - #define UNKNOWN заменен на const int UNKNOWN, чтобы избежать
//              пересечения с CLucene
//
// -----------------------------------------------------------------------------
//
// CD->10.12.1996
// LC->27.06.2007
// --------------

#ifndef LEM_QUANTORS__H
#define LEM_QUANTORS__H
#pragma once

 //************************************************************************
 // Used to indicate the presence of no object reference. Например, если
 // функция должна отыскивать и возвращать индекс элемента в списке, то
 // очень логично будет в случае неуспеха возвращать UNKNOWN, так как
 // индексы не могут быть < 0. Система SOLARIS интенсивнейше использует
 // данную константу!
 //************************************************************************
 #if !defined UNKNOWN_DEFINED
  //#define UNKNOWN   -1
  const int UNKNOWN = -1;
  #define UNKNOWN_DEFINED
 #endif

 #if !defined ANY_STATE_DEFINED
  #define ANY_STATE -2
  #define ANY_STATE_DEFINED
 #endif

 //************************************************************************
 // Внутреннее представление особого квантора "НЕИЗВЕСТНО КАКОЙ". Прошу не
 // путать с квантором UNKNOWN, которой используется сугубо Транслятором.
 //************************************************************************
 #if!defined UNKNOWN_STATE_DEFINED
  #define UNKNOWN_STATE -4
  #define UNKNOWN_STATE_DEFINED
 #endif

 namespace lem
 {
  //************************************************************************
  // Функция возвращает true, если аргумент x - квантор (на самом деле,
  // просто некоторые значения целого числа принимаются за специальные. Это
  // возможно в случаях, когда x не может в нормальных условиях принимать
  // значения меньше нуля - например, для индексов массиво и так далее).
  //************************************************************************
  inline int is_quantor( int x )
  {
   return x==UNKNOWN ||
          x==ANY_STATE ||
          x==UNKNOWN_STATE;
  }
 }

#endif
